"""
Django settings for plantparent project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from pathlib import Path
# Define the base directory of the project (root folder)
BASE_DIR = Path(__file__).resolve().parent.parent

# Secret key for cryptographic signing — keep it secret in production
SECRET_KEY = 'random-secret-key'
# Enable debug mode (only for development, not production!)
DEBUG = True

# Allowed hosts (empty means only localhost is allowed)
ALLOWED_HOSTS = []

INSTALLED_APPS = [
    # Default Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Custom apps
    'products',
    'accounts',
    'cart',
    'orders',
    'reviews',
    'wishlist',
    'blog',
    # Third-party packages
    'crispy_forms',
    'crispy_bootstrap5',
    'django_filters'
]

# Used to render Django forms with Bootstrap 5 styles using django-crispy-forms.
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]
# Custom user model defined in your accounts app
AUTH_USER_MODEL = 'accounts.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Custom debug middleware for error pages
    'plantparent.middleware.DebugErrorMiddleware',
]

# Points to main urls.py
ROOT_URLCONF = 'plantparent.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Global templates folder
        'DIRS': ['templates'],
        # Auto-search in each app’s /templates/
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Custom context processors
                'plantparent.context_processors.cart_context',
                'plantparent.context_processors.wishlist_context',
            ],
        },
    },
]

# WSGI entry point for deployment
WSGI_APPLICATION = 'plantparent.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        # Lightweight file-based DB
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# DATABASES = {
#     # 'default': {
#     #     'ENGINE': 'django.db.backends.sqlite3',
#     #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     # }
#     "default": {
#         "ENGINE": "django.db.backends.postgresql_psycopg2",
#         "NAME": "ganaf_db",  #"ospolydb", #
#         "USER": "postgres", #"ospolyusernew", # "postgres",
#         "PASSWORD": "admin12345", 
#         "HOST": "localhost",
#         "PORT": "5432",
#     }
# }



# Private secret key for server-side Stripe requests
STRIPE_SECRET_KEY = 'TBD'
# Public key used in frontend JavaScript
STRIPE_PUBLISHABLE_KEY = 'TBD'

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# Ensures strong password policies
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

# Default language
LANGUAGE_CODE = 'en-us'
# Default timezone
TIME_ZONE = 'UTC'
# Internationalization
USE_I18N = True
# Use timezone-aware datetimes
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# URL prefix for static files (CSS, JS, etc.)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# Sets the default ID field type for models to be 64-bit integers instead of 32-bit.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
